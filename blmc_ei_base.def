Bootstrap: docker
From: osrf/ros:melodic-desktop

# To save time when rebuilding the image, you can pull the ROS image once and
# then use the following instead:
#Bootstrap: localimage
#From: ./ros_melodic-desktop.sif

%post
    ROS_DISTRO=melodic

    apt-get update
    apt-get dist-upgrade -y

    # Build Dependencies
    # ==================

    apt-get install -y clang clang-format wget python3-pip

    # FIXME libopencv-dev should not be installed here, ROS already brings its
    # own, newer version of OpenCV.  Fix code so that ROS-version of OpenCV is
    # used.
    apt-get install -y \
        freeglut3-dev \
        ros-${ROS_DISTRO}-realtime-tools \
        python3-empy \
        python3-yaml \
        libcereal-dev \
        libopencv-dev \
        libxmu-dev \
        libncurses5-dev \
        libedit-dev \
        libopenblas-dev \
        libarmadillo-dev \
        libdlib-dev

    # upgrade pip
    pip3 --no-cache-dir install --upgrade pip

    # Need Python 3 version of several packages to build with Python 3
    pip3 --no-cache-dir install catkin-pkg rospkg
    #pip3 --no-cache-dir catkin_tools
    # Install catkin_tools from source to get fix from
    # https://github.com/catkin/catkin_tools/pull/574 (not yet in an official
    # release)
    # TODO: Remove this once catkin_tools 0.5.0 is released (see
    # https://github.com/catkin/catkin_tools/issues/594)
    pip3 --no-cache-dir install osrf-pycommon
    git clone https://github.com/catkin/catkin_tools.git
    cd catkin_tools
    python3 setup.py install
    cd ..

    # for building documentation
    apt-get install -y doxygen
    pip3 --no-cache-dir install \
        doxypypy \
        sphinx \
        m2r \
        recommonmark \
        breathe \
        sphinxcontrib-moderncmakedomain \
        sphinx-rtd-theme


    # Tools for Testing
    # =================

    apt-get install -y python3-nose python3-rednose


    # Tools for Debugging
    # ===================

    apt-get install -y gdb valgrind tmux less ipython3 python3-ipdb


    # Run Dependencies
    # ================

    apt-get install -y \
        python3-progressbar \
        python3-matplotlib

    # upgrade numpy (needed for pybullet)
    pip3 --no-cache-dir install numpy==1.19.1
    pip3 --no-cache-dir install pybullet==2.8.4 gym==0.17.2

    apt-get install -y libopenmpi-dev zlib1g-dev
    pip3 --no-cache-dir install stable-baselines==2.10.0
    pip3 --no-cache-dir install tensorflow==1.14 pandas==0.24.2 joblib==0.16.0
    pip3 --no-cache-dir install opencv-contrib-python
    pip3 --no-cache-dir install namegenerator

    # Add robotpkg apt repository
    tee /etc/apt/sources.list.d/robotpkg.list <<EOF
deb [arch=amd64] http://robotpkg.openrobots.org/wip/packages/debian/pub $(lsb_release -sc) robotpkg
deb [arch=amd64] http://robotpkg.openrobots.org/packages/debian/pub $(lsb_release -sc) robotpkg
EOF
    # Register the authentication certificate of robotpkg
    curl http://robotpkg.openrobots.org/packages/debian/robotpkg.key | apt-key add -
    apt-get update
    # Note: for some reason, installation fails if the below packages are all
    # combined in one `apt-get install` call.
    apt-get install -y robotpkg-py36-pinocchio
    apt-get install -y robotpkg-py36-crocoddyl

    # clean up
    apt-get clean

    # create a setup file
    echo ". /opt/ros/${ROS_DISTRO}/setup.bash
alias catmake='catkin_make -DPYTHON_EXECUTABLE=/usr/bin/python3'
catbuild() { catkin build -DPYTHON_EXECUTABLE=/usr/bin/python3 \"\$@\"; }
" > /setup.bash

%environment
    export PATH=/opt/openrobots/bin:$PATH
    export PKG_CONFIG_PATH=/opt/openrobots/lib/pkgconfig:$PKG_CONFIG_PATH
    export LD_LIBRARY_PATH=/opt/openrobots/lib:$LD_LIBRARY_PATH
    export PYTHONPATH=/opt/openrobots/lib/python3.6/site-packages:$PYTHONPATH

%labels
    Version 0.10.0

%help
    Container for building the BLMC_EI project.
    Run it with `singularity shell` at the root of your workspace, set up the
    environment by executing `source /setup.sh` and build with `catbuild` (which
    is an alias for `catkin build` that sets the Python executable to use Python
    3) or `catmake` (same but using `catkin_make`).
