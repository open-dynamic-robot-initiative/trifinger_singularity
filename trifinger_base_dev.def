# Base image with development tools
Bootstrap: localimage
From: ./trifinger_base_pylon.sif

%post -c /bin/bash
    set -e
    export DEBIAN_FRONTEND=noninteractive
    export XDG_CACHE_HOME=/_cache
    export UV_SYSTEM_PYTHON=1
    export UV_LINK_MODE=copy
    export UV_COMPILE_BYTECODE=1

    apt-get update

    function cached_wget() {
        dest="${XDG_CACHE_HOME}/$1"
        url="$2"
        if [ ! -e "${dest}" ]; then
            wget "${url}" -O "${dest}"
        fi
    }

    # Install neovim
    nvim_pkg=nvim-linux-x86_64.tar.gz
    cached_wget ${nvim_pkg} https://github.com/neovim/neovim/releases/download/stable/${nvim_pkg}
    tar -xzf "${XDG_CACHE_HOME}/${nvim_pkg}" -C /usr/local --strip-components=1

    # Install Apptainer
    apptainer_version=1.4.0
    cached_wget apptainer_${apptainer_version}.deb https://github.com/apptainer/apptainer/releases/download/v${apptainer_version}/apptainer_${apptainer_version}_amd64.deb
    apt-get install -y "${XDG_CACHE_HOME}/apptainer_${apptainer_version}.deb"

    apt-get install -y \
        clang-tidy \
        clangd-12 \
        fzf \
        gdb \
        ipython3 \
        python3-ipdb \
        python3-psutil \
        python3-venv \
        silversearcher-ag \
        tmux \
        valgrind

    # symlink clangd-12 to clangd
    ln -s $(which clangd-12) /usr/bin/clangd

    uv pip install -U \
        black \
        line-profiler \
        mypy \
        pylsp-mypy \
        python-lsp-black \
        python-lsp-ruff \
        python-lsp-server \
        ruff

    # mypy stub packages
    uv pip install -U \
        types-colorama \
        types-docutils \
        types-Pygments \
        types-PyYAML \
        types-setuptools \
        types-tabulate \
        types-toml \
        types-tqdm


    # install go (needed for lazygit)
    go_version=1.22.3
    go_pkg=go${go_version}.linux-amd64.tar.gz
    cached_wget ${go_pkg} https://go.dev/dl/${go_pkg}
    tar -C /usr/local -xzf "${XDG_CACHE_HOME}/${go_pkg}"

    GOBIN=/usr/local/bin/ /usr/local/go/bin/go install github.com/jesseduffield/lazygit@latest


    echo '
# search for install dir to source local workspace
start_dir="$PWD"
prev=.
while [[ "$PWD" != "$prev" ]]; do
    _setupfile="$PWD/install/local_setup.bash"
    if [ -e "${_setupfile}" ]; then
        echo "Sourcing ${_setupfile}"
        . "${_setupfile}"
        break
    fi
    prev="$PWD"
    cd ..
done
cd "$start_dir"
' >> /setup.bash

    # create a runscript that uses bash
    cat > /runscript.bash << \EOM
#!/bin/bash
set -e

# setup environment
source /setup.bash
exec "$@"
EOM


%environment
    export EDITOR=nvim
    export VISUAL=nvim


%runscript
    exec bash /runscript.bash "$@"

